{"ast":null,"code":"import _objectDestructuringEmpty from\"/home/sujai/Documents/pegasus projects/-MS_E-commerce_Pegasus_Tep_Online_Full-time_2021_8/amazon-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";import _slicedToArray from\"/home/sujai/Documents/pegasus projects/-MS_E-commerce_Pegasus_Tep_Online_Full-time_2021_8/amazon-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import\"./App.css\";import Header from\"./Header\";import Home from\"./Home\";import Checkout from\"./Checkout\";import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import Login from\"./Login\";import{auth}from\"./firebase\";import{useStateValue}from\"./StateProvider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2);_objectDestructuringEmpty(_useStateValue2[0]);var dispatch=_useStateValue2[1];useEffect(function(){// will only run once when the app component loads...\nauth.onAuthStateChanged(function(authUser){console.log(\"THE USER IS >>> \",authUser);if(authUser){// the user just logged in / the user was logged in\ndispatch({type:\"SET_USER\",user:authUser});}else{// the user is logged out\ndispatch({type:\"SET_USER\",user:null});}});},[]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",children:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsxs(Route,{path:\"/checkout\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Checkout,{})]}),/*#__PURE__*/_jsxs(Route,{path:\"/\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Home,{})]})]})})});}export default App;","map":{"version":3,"sources":["/home/sujai/Documents/pegasus projects/-MS_E-commerce_Pegasus_Tep_Online_Full-time_2021_8/amazon-clone/src/App.js"],"names":["React","useEffect","Header","Home","Checkout","BrowserRouter","Router","Switch","Route","Login","auth","useStateValue","App","dispatch","onAuthStateChanged","authUser","console","log","type","user"],"mappings":"gdAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,kBAAvD,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,KAAqB,YAArB,CACA,OAASC,aAAT,KAA8B,iBAA9B,C,wFACA,QAASC,CAAAA,GAAT,EAAe,oBACUD,aAAa,EADvB,mGACFE,CAAAA,QADE,oBAEbZ,SAAS,CAAC,UAAM,CACd;AAEAS,IAAI,CAACI,kBAAL,CAAwB,SAACC,QAAD,CAAc,CACpCC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCF,QAAhC,EAEA,GAAIA,QAAJ,CAAc,CACZ;AAEAF,QAAQ,CAAC,CACPK,IAAI,CAAE,UADC,CAEPC,IAAI,CAAEJ,QAFC,CAAD,CAAR,CAID,CAPD,IAOO,CACL;AACAF,QAAQ,CAAC,CACPK,IAAI,CAAE,UADC,CAEPC,IAAI,CAAE,IAFC,CAAD,CAAR,CAID,CACF,CAjBD,EAkBD,CArBQ,CAqBN,EArBM,CAAT,CAsBA,mBACE,KAAC,MAAD,wBACE,YAAK,SAAS,CAAC,KAAf,uBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,uBAEE,KAAC,KAAD,IAFF,EADF,cAKE,MAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,wBAEE,KAAC,MAAD,IAFF,cAIE,KAAC,QAAD,IAJF,GALF,cAWE,MAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,wBAEE,KAAC,MAAD,IAFF,cAIE,KAAC,IAAD,IAJF,GAXF,GADF,EADF,EADF,CAwBD,CAED,cAAeP,CAAAA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport Checkout from \"./Checkout\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { auth } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n  useEffect(() => {\n    // will only run once when the app component loads...\n\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"THE USER IS >>> \", authUser);\n\n      if (authUser) {\n        // the user just logged in / the user was logged in\n\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        // the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/login\">\n            {/* Login component*/}\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            {/* Header component  */}\n            <Header />\n            {/* Checkout component*/}\n            <Checkout />\n          </Route>\n          <Route path=\"/\">\n            {/* Header component  */}\n            <Header />\n            {/* Home component*/}\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}